# I found this one easy, although I had to review how to iterate through hash values.
# The (a?) correct syntax is hash.each do |k,v| //code// end

def num_repeats(string)
  counts = Hash.new(0)
  string = string.chars
  
  for char in string do
    if counts[char] == 0
      counts[char] = 1
    else
      counts[char] += 1
    end
  end
  
  maincount = 0
  
  counts.each do |k,v|
    if v >= 2
      maincount += 1
    end
  end
  
  maincount
  
end

# Write a method that takes in a string and returns the number of
# letters that appear more than once in the string. You may assume
# the string contains only lowercase letters. Count the number of
# letters that repeat, not the number of times they repeat in the
# string.
#
# Difficulty: hard.

# These are tests to check that your code is working. After writing
# your solution, they should all print true.
puts("\nTests for #num_repeats")
puts("===============================================")
    puts('num_repeats("abdbc") == 1: ' + (num_repeats('abdbc') == 1).to_s)
    # one character is repeated
    puts('num_repeats("aaa") == 1: ' + (num_repeats('aaa') == 1).to_s)
    puts('num_repeats("abab") == 2: ' + (num_repeats('abab') == 2).to_s)
    puts('num_repeats("cadac") == 2: ' + (num_repeats('cadac') == 2).to_s)
    puts('num_repeats("abcde") == 0: ' + (num_repeats('abcde') == 0).to_s)
puts("===============================================")
